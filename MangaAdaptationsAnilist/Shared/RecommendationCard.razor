@using System.ComponentModel.DataAnnotations
@using MangaAdaptationsAnilist.Data.Model
@using MangaAdaptationsAnilist.GraphQl
@inject IJSRuntime Js

<div class="mb-4 grid-sizer">
    <div class="card" id="card"> 
        <a class="row hidden-link fade-link" href="@Item.Anime.Url()" target="_blank">
            <div class="col-md-4 col-sm-4 col-4 h-100">
                <img class="card-img" src="@Item.Anime.ThumbnailUrl"/>
            </div>
            <div class="col-md-8 col-sm-8 col-8">
                <div class="card-body h-100">
                    <div class="d-flex flex-column h-100">
                        <h5 class="card-title">@Item.Anime.Title</h5>
                        <div>
                            @foreach (var genre in Item.Anime.Genres)
                            {
                                <span class="badge bg-secondary me-1">@genre</span>
                            }
                        </div>
                        <div class="pt-1 pb-1 small text-truncate crop-text-2" @onclick:stopPropagation="true" @onclick:preventDefault="true"
                             data-container="#card">
                            @Item.GetDescription()
                        </div>
                        <div class="mt-auto">
                            <span class="h-100 float-start d-flex justify-content-center align-content-center align-items-center">
                                <small class="text-muted">
                                    @if (@Item.Anime.AverageScore >= 0)
                                    {
                                        <span>Score&nbsp;</span>
                                        @(Item.Anime.AverageScore.ToString())
                                        <span>/100</span>
                                    }
                                </small>
                            </span>
                            <span class="float-end" @onclick:stopPropagation="true" @onclick:preventDefault="true">
                                <button type="button" @onclick="@OpenSourceMangaExternally" class="btn btn-link btn-sm">
                                    <span>View manga</span>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </a>
    </div>
</div>

@code {

    [Required, Parameter]
    public MangaWithAnime Item { get; set; }

    private async void OpenSourceMangaExternally()
    {
        await Js.InvokeVoidAsync("eval", $"let _discard_ = open(`{Item.OriginManga.Url(MediaType.Manga)}`, `_blank`)");
    }
}